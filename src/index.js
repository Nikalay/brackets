module.exports = function check(str, bracketsConfig) {
  /*1.Выбираем первый символ строки
	2.Если это открывающая скобка - помещаем ее в стек
	3.Если это закрывающая скобка, извлекаем последнее значение из стека и проверяем скобки на соответствие. Если стек пуст или закрывающая скобка не соответствует открывающей - прерываем выполнение и возвращаем false
	4.Переходим к следующему символу строки и повторяем действия с п.2
	5.Если по окончании выполнения алгоритма стек не пуст (это возможно, если открывающих скобок больше, чем закрывающих) - возвращаем false.*/
  var chars = str.split(''),
        stack = [],
        open = ['{', '(', '['],
        close = ['}', ')', ']'],
        closeIndex,
        openIndex;

    // Проходимся по строке, проверяя каждый ее символ (п.4).
    for (var i = 0, len = chars.length; i < len; i++) {
       openIndex = open.indexOf(chars[i]);
       if (openIndex !== -1) {
           // Нашли открывающую скобку. Помещаем ее в стек (п.2).
           stack.push(openIndex);
           continue;
       }

       closeIndex = close.indexOf(chars[i]);
       if (closeIndex !== -1) {
           // Нашли закрывающую скобку. Проверяем ее соответствие открывающей (п.3).
           openIndex = stack.pop();
           if (closeIndex !== openIndex) {
               return false;
           }
       }
    }

    // Проверяем дисбаланс открытых/закрытых скобок (п.5).
    if (stack.length !== 0) {
        return false;
    }

    return true;
}
